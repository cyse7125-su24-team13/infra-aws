prometheus: 
  prometheusSpec: 
    additionalScrapeConfigs: 
      - job_name: 'postgres'
        scrape_interval: 60s
        scrape_timeout: 30s
        static_configs: 
          - targets: 
              - 'postgresql-ha-postgresql-metrics.namespace3.svc.cluster.local:9187'
      - job_name: "kafka"
        scrape_interval: 60s
        scrape_timeout: 30s
        static_configs:
          - targets:
              - 'kafka-jmx-metrics.namespace2.svc.cluster.local:5556'
      - job_name: "kafka-zookeeper"
        scrape_interval: 60s
        scrape_timeout: 30s
        static_configs:
          - targets:
              - 'kafka-zookeeper-metrics.namespace2.svc.cluster.local:9141'
      - job_name: 'istiod'
        kubernetes_sd_configs:
        - role: endpoints
          namespaces:
            names:
            - istio-system
        relabel_configs:
        - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
          action: keep
          regex: istiod;http-monitoring
      - job_name: 'envoy-stats'
        metrics_path: /stats/prometheus
        kubernetes_sd_configs:
        - role: pod
        relabel_configs:
        - source_labels: [__meta_kubernetes_pod_container_port_name]
          action: keep
          regex: '.*-envoy-prom'

grafana: 
  adminPassword: "admin"
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
        - name: "kafka"
          orgId: 1
          folder: "kafka"
          disableDeletion: false
          editable: true
          options:
            path: /var/lib/grafana/dashboards/kafka
        - name: "postgres"
          orgId: 1
          folder: "postgres"
          type: file
          disableDeletion: false
          editable: true
          options:
            path: /var/lib/grafana/dashboards/postgres

  dashboards:
    kafka:
      kafka-overview:
        gnetId: 12483
        revision: 1
        datasource: Prometheus
    postgres:
      postgres-overview:
        gnetId: 9628
        revision: 1
        datasource: Prometheus

  service:
    type: LoadBalancer
    port: 80
    targetPort: 3000
    annotations:
      external-dns.alpha.kubernetes.io/hostname: grafana.eazydelivery.in


# grafana:
#   adminPassword: "admin"
#   service:
#     type: ClusterIP
#     port:
#       name: http
#       port: 80
#       targetPort: 3000


commonLabels:
  pg-network-policy: "true"