apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: flask-app-virtualservice
spec:
  hosts:
    - "*"  # The hostname for accessing the service, can be customized
  gateways:
    - monitoring/grafana-gateway  # Or your custom gateway
  http:
    - match:
        - uri:
            prefix: /cve-chatbot  # Route all traffic to this service
      route:
        - destination:
            host: flask-app-service.final-project.svc.cluster.local  # Full DNS name of the Kubernetes service
            port:
              number: 80

---
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: ui-virtualservice
spec:
  hosts:
    - "*"  # The hostname for accessing the service, can be customized
  gateways:
    - monitoring/grafana-gateway  # Or your custom gateway
  http:
    - match:
        - uri:
            prefix: /chat-ui  # Route all traffic to this service
      route:
        - destination:
            host: chat-ui-service.final-project.svc.cluster.local  # Full DNS name of the Kubernetes service
            port:
              number: 80
---

apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: grafana-virtual-service
  namespace: monitoring
spec:
  hosts:
  - "*"  # Or your specific domain
  gateways:
  - monitoring/grafana-gateway
  http:
  - match:
    - uri:
        prefix: "/"
    route:
    - destination:
        host: graphana-prometheus-grafana.monitoring.svc.cluster.local
        port:
          number: 80
---

apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: grafana-gateway
  namespace: monitoring
spec:
  selector:
    istio: ingressgateway
  servers:
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    - "*"
  - port:
      number: 443
      name: https
      protocol: HTTPS
    tls:
      mode: SIMPLE
      credentialName: example-tls
    hosts:
    - "grafana.eazydelivery.in"
---

apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: example-certificate
  namespace: istio-system
spec:
  secretName: example-tls
  issuerRef:
    name: letsencrypt-prod
    kind: ClusterIssuer
  commonName: grafana.eazydelivery.in
  dnsNames:
  - grafana.eazydelivery.in
---

apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
spec:
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    email: "vakiti.sai98@gmail.com"
    privateKeySecretRef:
      name: letsencrypt-prod
    solvers:
    - http01:
        ingress:
          class: istio
